// APK Signing Configuration for CI/CD
// This file handles keystore configuration for both local and CI builds

android {
    signingConfigs {
        debug {
            // Debug signing - uses default debug keystore
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        
        release {
            // Release signing - uses environment variables or local keystore
            if (System.getenv('KEYSTORE_PASSWORD') != null) {
                // CI/CD environment
                storeFile file('keystore.jks')
                storePassword System.getenv('KEYSTORE_PASSWORD')
                keyAlias System.getenv('KEY_ALIAS')
                keyPassword System.getenv('KEY_PASSWORD')
            } else if (project.hasProperty('RELEASE_STORE_FILE')) {
                // Local development with gradle.properties
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            } else {
                // Fallback to unsigned build
                println "⚠️ No signing configuration found. Building unsigned APK."
                storeFile null
                storePassword null
                keyAlias null
                keyPassword null
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.debug
            
            // Debug build identifier
            versionNameSuffix "-debug"
            applicationIdSuffix ".debug"
            
            // Debug specific configurations
            buildConfigField "boolean", "DEBUG_MODE", "true"
            buildConfigField "String", "BUILD_TYPE", '"debug"'
        }
        
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            
            // Use release signing if available, otherwise unsigned
            if (signingConfigs.release.storeFile != null) {
                signingConfig signingConfigs.release
                println "✅ Using release signing configuration"
            } else {
                println "⚠️ Building unsigned release APK"
            }
            
            // ProGuard configuration
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Release specific configurations
            buildConfigField "boolean", "DEBUG_MODE", "false"
            buildConfigField "String", "BUILD_TYPE", '"release"'
            
            // Optimization settings
            ndk {
                debugSymbolLevel 'SYMBOL_TABLE'
            }
        }
    }
    
    // Build variant output customization
    applicationVariants.all { variant ->
        variant.outputs.all {
            def buildType = variant.buildType.name
            def versionName = variant.versionName
            def versionCode = variant.versionCode
            def date = new Date().format('yyyyMMdd')
            
            if (buildType == "release") {
                outputFileName = "SMS-Forward-v${versionName}-${versionCode}-${date}.apk"
            } else if (buildType == "debug") {
                outputFileName = "SMS-Forward-v${versionName}-debug-${date}.apk"
            }
        }
    }
} 